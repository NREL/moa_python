Compiling AMR wind and running precursor simulation 
AMR Wind code: https://github.com/Exawind/amr-wind
	Has a regression test dashboard "Nightly test dashboard" - if the current version is failing a lot of tests, you can go back in time and find a version that works
	Usually pretty safe to grab main branch though

	AMR wind documentation: https://exawind.github.io/amr-wind/user/inputs.html

################ Compiling on EAGLE ######################
1. Make a new directory on Eagle.  Probably better to put the executable in you project or your home folder
2. Git clone the AMR wind code (git clone --recursive https://github.com/Exawind/amr-wind)- Also brings in the submodules
	If you did not do the --recursive option, can also use (git submodule update --init, git submodule update)
3. In the new amr-wind folder, make a build directory (ex: mkdir build) and enter build directory (ex: cd build)
4. load modules that you need and build cmake file - gives you build options Does Not Come With Code
	Need the following modules:   /nopt/nrel/apps/modules/default/modulefiles
                                    helics/helics-3.1.0_openmpi
                                    cmake
                                    netcdf-c/4.7.3/gcc-mpi
      Can load manually (module load [module name]), or use a script, shown below

To make buildme.sh file, start by (vim buildme.sh), then copy the contents of the file, shwon below between the """ markers
Contents of buildme.sh file - you have to make yourself (NOTE: DEPENDENT ON SPECIFIC COMPUTER CLUSTER MODULE PATHS):
"""
module purge
module use /nopt/nrel/apps/modules/default/modulefiles
module load helics/helics-3.1.0_openmpi
module load cmake
module load netcdf-c/4.7.3/gcc-mpi

cmake -DAMR_WIND_ENABLE_CUDA:BOOL=OFF \
      -DCMAKE_INSTALL_PREFIX:PATH=./install \
      -DAMR_WIND_ENABLE_MPI:BOOL=ON \
      -DAMR_WIND_ENABLE_OPENMP:BOOL=OFF \
      -DAMR_WIND_TEST_WITH_FCOMPARE:BOOL=OFF \
      -DCMAKE_BUILD_TYPE=Release \
      -DAMR_WIND_ENABLE_NETCDF:BOOL=ON \
      -DAMR_WIND_ENABLE_OPENFAST:BOOL=OFF \
      -DAMR_WIND_ENABLE_HYPRE:BOOL=OFF \
      -DAMR_WIND_ENABLE_MASA:BOOL=OFF \
      -DAMR_WIND_ENABLE_TESTS:BOOL=OFF \
      -DAMR_WIND_ENABLE_FORTRAN:BOOL=OFF \
      -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON \
      -DAMR_WIND_ENABLE_ALL_WARNINGS:BOOL=ON \
      -DBUILD_SHARED_LIBS:BOOL=ON \
      -DAMR_WIND_ENABLE_HELICS:BOOL=ON \
      -DHELICS_INSTALL_DIR:PATH="/nopt/nrel/apps/helics/v3.1.0_openmpi/"\
      -DHELICS_DIR:PATH="/nopt/nrel/apps/helics/v3.1.0_openmpi/" .. 

nice make -j16
"""

5. Run buildme.sh file to get make file - may need to change permissions (chmod +x buildme.sh) then run (./buildme.sh)
6. Then type (ex: make) and it compiles the code

Can compile consicutively, don't have to remove anything
note: intel compiling would be faster, currently uses gcc


###############  Running a Precursor #####################
1. Make a new folder in scratch on Eagle
2. Copy regression tests as a starting point in amr-wind/test/test_files/abl_bndry_output_native/able_bndry_output_native.inp
cp ../amr-wind/test/test_files/abl_bndry_output_native/abl_bndry_output_native.inp
3. Copy executable that was just built 

4. AMR wind input file big things:
time.stop_time: max simulated time
time.max_step:  max number of time steps

fixed_dt: constant dt (negative dt gives simulation based on constant cfl)
cfl: make sure your cfl number is less than 1

plot_interval: how long between large 3d files for visulization
checkpoint_interval: how long between documenting restart files

Source Terms (physics):
AbLMeanBoussinesq BoussinesqBouyancy CoriolisForcing GeostrophicForcing
want geostrophic wind to be the same as inflow velocity
Can perturb the velocity and/or temperature - perturbing these helps start turbulence faster

to write precursor files, use "bndry_files" block of code
can pick a start time to start outputing precursor files bndry_output_start_time (in seconds - simulation time)

For the code to run fast, you want to pick cell numbers that are factors of 8 (ex. 64), but just needs to be factor of 2

Prints variables that are not used at the end of the run - helpful to see if you made any mistakes

To restart from a checkpoint:
1. increase max time steps
2. io.restart_file: need to point it to the checkpoint file you want to start from

Extra steps to change from precursor to main simulation (I think)
3. Add where to find the boundary files
4. Change periodic boundary conditions
5. Add physics changes (change to pressure inflow?)


############ Other Notes ################
Another option for input files: 
	Running AMR wind frontend python tool.  Uses tk library (uses GUI to generate input files) - lawrencecheung github fork (https://github.com/lawrenceccheung/amrwind-frontend)
Precursors - Exawind/wind-energy has precursors (https://github.com/Exawind/wind-energy):
	In each folder there's some input files, images of results, python post-prossessing analysis notebooks, etc.
	Has Atlantic set up (over water)
	Has HFM_FY22Q4 - stable case
	Some neutral cases (Pedersen) but you have to run for 24 hours to develop it

spack-manager - makes building easier (can build with one line command)


