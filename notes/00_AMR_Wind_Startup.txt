Compiling AMR wind and running precursor simulation 
AMR Wind code: https://github.com/Exawind/amr-wind
	Has a regression test dashboard "Nightly test dashboard" - if the current version is failing a lot of tests, you can go back in time and find a version that works
	Usually pretty safe to grab main branch though

	AMR wind documentation: https://exawind.github.io/amr-wind/user/inputs.html

################ Compiling on EAGLE ######################
1. Make a new directory on Eagle.  Probably better to put the executable in you project or your home folder
2. Git clone the AMR wind code (git clone --recursive https://github.com/Exawind/amr-wind)- Also brings in the submodules
	If you did not do the --recursive option, can also use (git submodule update --init, git submodule update)
3. In the new amr-wind folder, make a build directory (ex: mkdir build) and enter build directory (ex: cd build)
4. load modules that you need and build cmake file - gives you build options Does Not Come With Code
	Need the following modules:   /nopt/nrel/apps/modules/default/modulefiles
                                    helics/helics-3.1.0_openmpi
                                    cmake
                                    netcdf-c/4.7.3/gcc-mpi
      Can load manually (module load [module name]), or use a script, shown below

To make buildme.sh file, start by (vim buildme.sh), then copy the contents of the file, shwon below between the """ markers
Contents of buildme.sh file - you have to make yourself (NOTE: DEPENDENT ON SPECIFIC COMPUTER CLUSTER MODULE PATHS):
"""
module purge
module use /nopt/nrel/apps/modules/default/modulefiles
module load helics/helics-3.1.0_openmpi
module load cmake
module load netcdf-c/4.7.3/gcc-mpi

cmake -DAMR_WIND_ENABLE_CUDA:BOOL=OFF \
      -DCMAKE_INSTALL_PREFIX:PATH=./install \
      -DAMR_WIND_ENABLE_MPI:BOOL=ON \
      -DAMR_WIND_ENABLE_OPENMP:BOOL=OFF \
      -DAMR_WIND_TEST_WITH_FCOMPARE:BOOL=OFF \
      -DCMAKE_BUILD_TYPE=Release \
      -DAMR_WIND_ENABLE_NETCDF:BOOL=ON \
      -DAMR_WIND_ENABLE_OPENFAST:BOOL=OFF \
      -DAMR_WIND_ENABLE_HYPRE:BOOL=OFF \
      -DAMR_WIND_ENABLE_MASA:BOOL=OFF \
      -DAMR_WIND_ENABLE_TESTS:BOOL=OFF \
      -DAMR_WIND_ENABLE_FORTRAN:BOOL=OFF \
      -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON \
      -DAMR_WIND_ENABLE_ALL_WARNINGS:BOOL=ON \
      -DBUILD_SHARED_LIBS:BOOL=ON \
      -DAMR_WIND_ENABLE_HELICS:BOOL=ON \
      -DHELICS_INSTALL_DIR:PATH="/nopt/nrel/apps/helics/v3.1.0_openmpi/"\
      -DHELICS_DIR:PATH="/nopt/nrel/apps/helics/v3.1.0_openmpi/" .. 

nice make -j16
"""

5. Run buildme.sh file to get make file - may need to change permissions (chmod +x buildme.sh) then run (./buildme.sh)
6. Then type (ex: make) and it compiles the code

Can compile consicutively, don't have to remove anything
note: intel compiling would be faster, currently uses gcc




